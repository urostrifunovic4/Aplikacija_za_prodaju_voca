/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Host } from "@angular/core";
import { SlickContainerDirective } from "./slick-container.directive";
var SlickItemDirective = /** @class */ (function () {
    function SlickItemDirective(elRef, slickRef) {
        this.elRef = elRef;
        this.slickRef = slickRef;
    }
    /**
     * @return {?}
     */
    SlickItemDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.slickRef.addSlide(this.elRef.nativeElement);
    };
    /**
     * @return {?}
     */
    SlickItemDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.slickRef.removeSlide(this.elRef.nativeElement);
    };
    SlickItemDirective.decorators = [
        { type: Directive, args: [{
                    selector: "[slickItem]"
                },] }
    ];
    /** @nocollapse */
    SlickItemDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: SlickContainerDirective, decorators: [{ type: Host }] }
    ]; };
    return SlickItemDirective;
}());
export { SlickItemDirective };
if (false) {
    /** @type {?} */
    SlickItemDirective.prototype.elRef;
    /**
     * @type {?}
     * @private
     */
    SlickItemDirective.prototype.slickRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpY2staXRlbS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc2xpY2tqcy8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL3NsaWNrLWl0ZW0uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUdULFVBQVUsRUFDVixJQUFJLEVBQ0wsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFdEU7SUFJRSw0QkFDUyxLQUFpQixFQUNSLFFBQWlDO1FBRDFDLFVBQUssR0FBTCxLQUFLLENBQVk7UUFDUixhQUFRLEdBQVIsUUFBUSxDQUF5QjtJQUNoRCxDQUFDOzs7O0lBRUosNENBQWU7OztJQUFmO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUNuRCxDQUFDOzs7O0lBRUQsd0NBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0RCxDQUFDOztnQkFmRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7aUJBQ3hCOzs7O2dCQVBDLFVBQVU7Z0JBR0gsdUJBQXVCLHVCQVEzQixJQUFJOztJQVVULHlCQUFDO0NBQUEsQUFoQkQsSUFnQkM7U0FiWSxrQkFBa0I7OztJQUUzQixtQ0FBd0I7Ozs7O0lBQ3hCLHNDQUFpRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERpcmVjdGl2ZSxcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgT25EZXN0cm95LFxuICBFbGVtZW50UmVmLFxuICBIb3N0XG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBTbGlja0NvbnRhaW5lckRpcmVjdGl2ZSB9IGZyb20gXCIuL3NsaWNrLWNvbnRhaW5lci5kaXJlY3RpdmVcIjtcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiBcIltzbGlja0l0ZW1dXCJcbn0pXG5leHBvcnQgY2xhc3MgU2xpY2tJdGVtRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGVsUmVmOiBFbGVtZW50UmVmLFxuICAgIEBIb3N0KCkgcHJpdmF0ZSBzbGlja1JlZjogU2xpY2tDb250YWluZXJEaXJlY3RpdmVcbiAgKSB7fVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLnNsaWNrUmVmLmFkZFNsaWRlKHRoaXMuZWxSZWYubmF0aXZlRWxlbWVudCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnNsaWNrUmVmLnJlbW92ZVNsaWRlKHRoaXMuZWxSZWYubmF0aXZlRWxlbWVudCk7XG4gIH1cbn1cbiJdfQ==