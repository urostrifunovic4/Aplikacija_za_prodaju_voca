import { ElementRef, EventEmitter, NgZone, OnDestroy } from '@angular/core';
import { Options } from '../models/options';
import { Slick } from '../models/slick';
import { LazyLoadService } from '../services/lazy-load.service';
export declare class SlickContainerDirective implements OnDestroy {
    private elRef;
    private zone;
    private lazyLoadService;
    private links;
    config: Slick.Config;
    afterChange: EventEmitter<any>;
    beforeChange: EventEmitter<any>;
    breakpoint: EventEmitter<any>;
    destroy: EventEmitter<any>;
    init: EventEmitter<any>;
    slides: HTMLElement[];
    jQueryElement: any;
    initialize: boolean;
    slickCount: number;
    private destroy$;
    constructor(elRef: ElementRef, zone: NgZone, lazyLoadService: LazyLoadService, links: Options.Links);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    initSlick(): void;
    syncSlides(): void;
    addSlide(slide: HTMLElement): void;
    removeSlide(slide: HTMLElement): void;
    goTo(index: number): void;
    next(): void;
    prev(): void;
    pause(): void;
    play(): void;
    unslick(): void;
    listenMouseWheel(): void;
}
